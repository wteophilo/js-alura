{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEKC,a;AACX,+BAAYC,UAAZ,EAAuB;AAAA;;AACrB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;mCAEQC,U,EAAW;AAAA;;AAClB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACe,WADf,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKEI,sBAAQI,SAAR,GAAmB,UAACC,CAAD,EAAK;AACpBP;AACH,eAFD;;AAIAE,sBAAQM,OAAR,GAAiB,UAACD,CAAD,EAAK;AACpBE,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAKH,aAfM,CAAP;AAgBD;;;uCAEY;AAAA;;AACV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AAClC,kBAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACgB,WADhB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;;AAKE,kBAAIC,cAAc,EAAlB;AACAF,qBAAOP,SAAP,GAAmB,aAAK;AACtB,oBAAIU,QAAQT,EAAEI,MAAF,CAASM,MAArB;AACE,oBAAGD,KAAH,EAAS;AACP,sBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,8BAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA0BH,KAAKI,WAA/B,EAA2CJ,KAAKK,MAAhD,CAAjB;AACAP,wBAAMQ,QAAN;AACD,iBAJD,MAIK;AACHxB,0BAAQe,WAAR;AACD;AACJ,eATD;;AAWAF,qBAAOL,OAAP,GAAiB,aAAI;AACnBC,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,qCAAP;AACD,eAHD;AAIJ,aAtBM,CAAP;AAuBF;;;wCAGY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,kBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACe,WADf,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX4B,KAHW,EAAd;;AAMEvB,sBAAQI,SAAR,GAAoB;AAAA,uBAAIN,QAAQ,kCAAR,CAAJ;AAAA,eAApB;AACAE,sBAAQM,OAAR,GAAkB,aAAI;AACpBC,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,wCAAP;AACD,eAHD;AAID,aAZI,CAAP;AAaD","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao{\n  constructor(connection){\n    this._connection = connection;\n    this._store = 'negociacoes';\n  }\n\n  adiciona(negociacao){\n    return new Promise((resolve,reject)=>{\n      let request = this._connection\n        .transaction([this._store],'readwrite')\n        .objectStore(this._store)\n        .add(negociacao);\n\n        request.onsuccess= (e)=>{\n            resolve();\n        };\n\n        request.onerror =(e)=>{\n          console.log(e.target.error);\n          reject('Não foi possível adicionar a negociacao');\n        };\n\n    });\n  }\n\n   listaTodos(){\n     return new Promise((resolve,reject)=>{\n        let cursor = this._connection\n          .transaction([this._store],'readwrite')\n          .objectStore(this._store)\n          .openCursor();\n\n          let negociacoes = [];\n          cursor.onsuccess = e => {\n            let atual = e.target.result;\n              if(atual){\n                var dado = atual.value;\n                negociacoes.push(new Negociacao(dado._data,dado._quantidade,dado._valor));\n                atual.continue();\n              }else{\n                resolve(negociacoes);\n              }\n          }\n\n          cursor.onerror = e =>{\n            console.log(e.target.error);\n            reject('Não foi possível listar negociações');\n          }\n     });\n  }\n\n\n  apagarTodos(){\n    return new Promise((resolve,reject)=>{\n      let request = this._connection\n        .transaction([this._store],'readwrite')\n        .objectStore(this._store)\n        .clear();\n\n\n        request.onsuccess = e =>resolve('Negociações apagadas com sucesso');\n        request.onerror = e =>{\n          console.log(e.target.error);\n          reject('Não foi possível remover as negociaçõe');\n        }\n      });\n  }\n}\n"]}