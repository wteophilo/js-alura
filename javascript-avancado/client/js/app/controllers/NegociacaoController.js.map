{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordenacaoAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","this_mensagem","texto","error","setInterval","_importandoNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","obterNegociacoes","apagarTodos","esvazia","value","focus","textoParaData","parseInt","parseFloat","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\nimport {Mensagem} from '../models/Mensagem';\nimport {NegociacoesView} from '../views/NegociacoesView';\nimport {MensagemView} from '../views/MensagemView';\nimport {NegociacaoService} from '../services/NegociacaoService';\nimport {DateHelper} from '../helpers/DateHelper';\nimport {Bind} from '../helpers/Bind';\nimport {Negociacao} from '../models/Negociacao';\n\nclass NegociacaoController {\n\n    constructor() {\n      let $ = document.querySelector.bind(document);\n\n      this._inputData = $('#data');\n      this._inputQuantidade = $('#quantidade');\n      this._inputValor = $('#valor');\n\n      this._listaNegociacoes= new Bind(\n        new ListaNegociacoes(),\n        new NegociacoesView($('#negociacoesView')),\n        'adiciona','esvazia','ordena','inverteOrdem'\n      );\n\n      this._mensagem = new Bind(\n        new Mensagem(),\n        new MensagemView($('#mensagemView')),\n        'texto'\n      );\n      this._ordenacaoAtual = \"\";\n      this._service = new NegociacaoService();\n      this._init();\n    }\n\n\n    _init(){\n        this._service\n        .lista()\n        .then(negociacoes =>\n           negociacoes.forEach(negociacao=>\n             this._listaNegociacoes.adiciona(negociacao)))\n        .catch(erro => {\n          console.log(erro);\n          this_mensagem.texto = error;\n        });\n\n        setInterval(()=>{\n          this._importandoNegociacoes();\n        },3000);\n\n    }\n\n    adiciona(event) {\n      event.preventDefault();\n      let negociacao = this._criaNegociacao();\n      this._service\n        .cadastra(negociacao)\n        .then(mensagem =>{\n           this._listaNegociacoes.adiciona(negociacao);\n           this._mensagem.texto = mensagem;\n           this._limpaFormulario();\n         })\n         .catch(erro => this._mensagem.texto = erro);\n    }\n\n    _importandoNegociacoes(){\n        this._service\n        .obterNegociacoes()\n        .then(negociacoes => negociacoes.forEach(negociacao =>{\n          this._listaNegociacoes.adiciona(negociacao);\n          this._mensagem.texto = 'Negociação do período importadas'\n        }))\n        .catch(erro => this._mensagem.texto = erro);\n    }\n\n    apaga(){\n      this._service\n        .apagarTodos()\n        .then(mensagem => {\n          this._mensagem.texto= mensagem;\n          this._listaNegociacoes.esvazia();\n        })\n        .catch(erro => this_mensagem.texto = erro);\n    }\n\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0\n\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));\n    }\n\n    ordena(coluna){\n      if(this._ordenacaoAtual == coluna){\n        this._listaNegociacoes.inverteOrdem();\n      }else{\n        this._listaNegociacoes.ordena((a,b)=> a[coluna] - b[coluna]);\n      }\n\n      this._ordenacaoAtual =  coluna;\n    }\n}\n"]}